.DEFAULT_GOAL := help

org_code := {{ org_code }}

tasks := writeTxt_
tasks := $(foreach t,$(tasks),flow/$t)


.PHONY: help install import flow export check readme lint format pre-commit $(tasks) check_env

help:
	$(info Please use 'make <target>', where <target> is one of)
	$(info )
	$(info   install     install packages and prepare software environment)
	$(info )
	$(info   import      import data required for processing document flow)
	$(info   flow        execute the tasks in the document flow)
	$(info   export      export the data generated by the document flow)
	$(info )
	$(info   readme      generate the readme for the flow/task directories)
	$(info )
	$(info   lint        run the code linters)
	$(info   format      reformat code)
	$(info   pre-commit  run pre-commit checks, runs yaml lint, you need pre-commit)
	$(info )
	$(info Check the makefile to know exactly what each target is doing.)
	@echo # dummy command

install: pyproject.toml
	poetry install --only=dev

check_env:
ifndef GR_DIR
	$(error GR_DIR is undefined)
endif
ifndef SECRETS_DIR
	$(error SECRETS_DIR is undefined)
endif


import/websites/gr.maharashtra.gov.in/{{dept_short_name}}:
	cd import/websites/gr.maharashtra.gov.in/ && ln -s $(GR_DIR)/{{dept_short_name}} .

.secrets/google.token:
	cd .secrets && ln -s $(SECRETS_DIR)/google.token .

import: check_env import/websites/gr.maharashtra.gov.in/{{dept_short_name}} .secrets/google.token
	poetry run python import/src/build_documents.py import/websites/gr.maharashtra.gov.in/{{dept_short_name}} import/documents
	poetry run python flow/src/link_new.py import/documents flow/writeTxt_/input

flow: $(tasks)
$(tasks):
	poetry run make -C $@

check:
	poetry run op check

readme:
	poetry run op readme

lint:
	poetry run black -q .
	poetry run ruff .

format:
	poetry run black -q .
	poetry run ruff --fix .

export: format lint
	poetry run make -C flow/writeTxt_ compress
	# git add .
	# git commit

# Use pre-commit if there are lots of edits,
# https://pre-commit.com/ for instructions
# Also set git hook `pre-commit install`
pre-commit:
	pre-commit run --all-files
